{"ast":null,"code":"var _jsxFileName = \"E:\\\\work\\\\Jukebox\\\\local_react_frontend\\\\src\\\\components\\\\Player.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport YouTube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Player({\n  state\n}) {\n  _s();\n  const [videoId, setVideoId] = React.useState('');\n  const [player, setPlayer] = React.useState(null);\n  React.useEffect(() => {\n    const playedRecord = state.find(record => record.isPlayed); // Changed: moved finding the played record inside the React.useEffect\n    if (playedRecord) {\n      const videoUrl = playedRecord.youtubeUrl;\n      const regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/watch\\?v=|youtu\\.be\\/)([^&]+)/;\n      const match = videoUrl.match(regex);\n      const newVideoId = match ? match[1] : null;\n      setVideoId(newVideoId); // Changed: set videoId state based on regex match\n    }\n  }, [state]);\n  React.useEffect(() => {\n    const opts = {\n      height: '200',\n      width: '400',\n      playerVars: {\n        // https://developers.google.com/youtube/player_parameters\n        autoplay: 0\n      }\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(YouTube, {\n    videoId: \"2g811Eo7K8U\",\n    opts: opts\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 12\n  }, this);\n}\n_s(Player, \"9j8CXtR9dKVjxX6quLRN8gEpEvc=\");\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","YouTube","jsxDEV","_jsxDEV","Player","state","_s","videoId","setVideoId","useState","player","setPlayer","useEffect","playedRecord","find","record","isPlayed","videoUrl","youtubeUrl","regex","match","newVideoId","opts","height","width","playerVars","autoplay","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/work/Jukebox/local_react_frontend/src/components/Player.js"],"sourcesContent":["import React from 'react';\r\nimport YouTube from 'react-youtube';\r\n\r\n\r\nfunction Player({ state }) {\r\n    const [videoId, setVideoId] = React.useState('');\r\n    const [player, setPlayer] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        const playedRecord = state.find(record => record.isPlayed); // Changed: moved finding the played record inside the React.useEffect\r\n        if (playedRecord) {\r\n            const videoUrl = playedRecord.youtubeUrl;\r\n            const regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/watch\\?v=|youtu\\.be\\/)([^&]+)/;\r\n            const match = videoUrl.match(regex);\r\n            const newVideoId = match ? match[1] : null;\r\n            setVideoId(newVideoId); // Changed: set videoId state based on regex match\r\n        }\r\n    }, [state]);\r\n\r\n    React.useEffect(() => {\r\n    const opts = {\r\n        height: '200',\r\n        width: '400',\r\n        playerVars: {\r\n        // https://developers.google.com/youtube/player_parameters\r\n        autoplay: 0,\r\n        },\r\n    }\r\n});\r\n\r\n    return <YouTube videoId=\"2g811Eo7K8U\" opts={opts} />;\r\n}\r\n\r\nexport default Player;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpC,SAASC,MAAMA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,KAAK,CAACS,QAAQ,CAAC,IAAI,CAAC;EAEhDT,KAAK,CAACY,SAAS,CAAC,MAAM;IAClB,MAAMC,YAAY,GAAGR,KAAK,CAACS,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAC;IAC5D,IAAIH,YAAY,EAAE;MACd,MAAMI,QAAQ,GAAGJ,YAAY,CAACK,UAAU;MACxC,MAAMC,KAAK,GAAG,0EAA0E;MACxF,MAAMC,KAAK,GAAGH,QAAQ,CAACG,KAAK,CAACD,KAAK,CAAC;MACnC,MAAME,UAAU,GAAGD,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI;MAC1CZ,UAAU,CAACa,UAAU,CAAC,CAAC,CAAC;IAC5B;EACJ,CAAC,EAAE,CAAChB,KAAK,CAAC,CAAC;EAEXL,KAAK,CAACY,SAAS,CAAC,MAAM;IACtB,MAAMU,IAAI,GAAG;MACTC,MAAM,EAAE,KAAK;MACbC,KAAK,EAAE,KAAK;MACZC,UAAU,EAAE;QACZ;QACAC,QAAQ,EAAE;MACV;IACJ,CAAC;EACL,CAAC,CAAC;EAEE,oBAAOvB,OAAA,CAACF,OAAO;IAACM,OAAO,EAAC,aAAa;IAACe,IAAI,EAAEA;EAAK;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxD;AAACxB,EAAA,CA3BQF,MAAM;AAAA2B,EAAA,GAAN3B,MAAM;AA6Bf,eAAeA,MAAM;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}