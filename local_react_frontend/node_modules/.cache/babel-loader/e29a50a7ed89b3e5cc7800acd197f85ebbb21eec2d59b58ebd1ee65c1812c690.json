{"ast":null,"code":"var _jsxFileName = \"E:\\\\work\\\\Jukebox\\\\local_react_frontend\\\\src\\\\components\\\\Player.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport YouTube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Player({\n  state\n}) {\n  _s();\n  const [videoId, setVideoId] = React.useState('');\n  const [player, setPlayer] = React.useState(null);\n  React.useEffect(() => {\n    const playedRecord = state.find(record => record.isPlayed); // Changed: moved finding the played record inside the React.useEffect\n    if (playedRecord) {\n      const videoUrl = playedRecord.youtubeUrl;\n      const regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/watch\\?v=|youtu\\.be\\/)([^&]+)/;\n      const match = videoUrl.match(regex);\n      const newVideoId = match ? match[1] : null;\n      setVideoId(newVideoId); // Changed: set videoId state based on regex match\n    }\n  }, [state]);\n  React.useEffect(() => {\n    if (videoId && !player) {\n      // Changed: check if player is not initialized\n      console.log('We are here');\n      const opts = {\n        height: '200',\n        width: '400',\n        playerVars: {\n          autoplay: 1\n        }\n      };\n      return /*#__PURE__*/_jsxDEV(YouTube, {\n        videoId: videoId,\n        opts: opts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 20\n      }, this);\n    } else if (player) {\n      player.loadVideoById(videoId); // Changed: load video by videoId if player exists\n    }\n  }, [videoId, player]);\n}\n_s(Player, \"9j8CXtR9dKVjxX6quLRN8gEpEvc=\");\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","YouTube","jsxDEV","_jsxDEV","Player","state","_s","videoId","setVideoId","useState","player","setPlayer","useEffect","playedRecord","find","record","isPlayed","videoUrl","youtubeUrl","regex","match","newVideoId","console","log","opts","height","width","playerVars","autoplay","fileName","_jsxFileName","lineNumber","columnNumber","loadVideoById","_c","$RefreshReg$"],"sources":["E:/work/Jukebox/local_react_frontend/src/components/Player.js"],"sourcesContent":["import React from 'react';\r\nimport YouTube from 'react-youtube';\r\n\r\n\r\nfunction Player({ state }) {\r\n    const [videoId, setVideoId] = React.useState('');\r\n    const [player, setPlayer] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        const playedRecord = state.find(record => record.isPlayed); // Changed: moved finding the played record inside the React.useEffect\r\n        if (playedRecord) {\r\n            const videoUrl = playedRecord.youtubeUrl;\r\n            const regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/watch\\?v=|youtu\\.be\\/)([^&]+)/;\r\n            const match = videoUrl.match(regex);\r\n            const newVideoId = match ? match[1] : null;\r\n            setVideoId(newVideoId); // Changed: set videoId state based on regex match\r\n        }\r\n    }, [state]);\r\n\r\n    React.useEffect(() => {\r\n        if (videoId && !player) { // Changed: check if player is not initialized\r\n            console.log('We are here')\r\n            \r\n            const opts = {\r\n                height: '200',\r\n                width: '400',\r\n                playerVars: {\r\n                autoplay: 1,\r\n                },\r\n            }\r\n            return <YouTube videoId={videoId} opts={opts} />;\r\n        } else if (player) {\r\n            player.loadVideoById(videoId); // Changed: load video by videoId if player exists\r\n        }\r\n    }, [videoId, player]);\r\n\r\n\r\n}\r\n\r\nexport default Player;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpC,SAASC,MAAMA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,KAAK,CAACS,QAAQ,CAAC,IAAI,CAAC;EAEhDT,KAAK,CAACY,SAAS,CAAC,MAAM;IAClB,MAAMC,YAAY,GAAGR,KAAK,CAACS,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAC;IAC5D,IAAIH,YAAY,EAAE;MACd,MAAMI,QAAQ,GAAGJ,YAAY,CAACK,UAAU;MACxC,MAAMC,KAAK,GAAG,0EAA0E;MACxF,MAAMC,KAAK,GAAGH,QAAQ,CAACG,KAAK,CAACD,KAAK,CAAC;MACnC,MAAME,UAAU,GAAGD,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI;MAC1CZ,UAAU,CAACa,UAAU,CAAC,CAAC,CAAC;IAC5B;EACJ,CAAC,EAAE,CAAChB,KAAK,CAAC,CAAC;EAEXL,KAAK,CAACY,SAAS,CAAC,MAAM;IAClB,IAAIL,OAAO,IAAI,CAACG,MAAM,EAAE;MAAE;MACtBY,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAE1B,MAAMC,IAAI,GAAG;QACTC,MAAM,EAAE,KAAK;QACbC,KAAK,EAAE,KAAK;QACZC,UAAU,EAAE;UACZC,QAAQ,EAAE;QACV;MACJ,CAAC;MACD,oBAAOzB,OAAA,CAACF,OAAO;QAACM,OAAO,EAAEA,OAAQ;QAACiB,IAAI,EAAEA;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACpD,CAAC,MAAM,IAAItB,MAAM,EAAE;MACfA,MAAM,CAACuB,aAAa,CAAC1B,OAAO,CAAC,CAAC,CAAC;IACnC;EACJ,CAAC,EAAE,CAACA,OAAO,EAAEG,MAAM,CAAC,CAAC;AAGzB;AAACJ,EAAA,CAjCQF,MAAM;AAAA8B,EAAA,GAAN9B,MAAM;AAmCf,eAAeA,MAAM;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}