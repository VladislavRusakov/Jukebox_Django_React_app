{"ast":null,"code":"var _jsxFileName = \"E:\\\\work\\\\Jukebox\\\\local_react_frontend\\\\src\\\\components\\\\Player.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport YouTube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Player({\n  state,\n  onPlayerReadyRef\n}) {\n  _s();\n  const [videoId, setVideoId] = React.useState('');\n  const playerRef = useRef(null);\n  React.useEffect(() => {\n    const playedRecord = state.find(record => record.isPlayed);\n    if (playedRecord) {\n      const videoUrl = playedRecord.youtubeUrl;\n      const regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/watch\\?v=|youtu\\.be\\/)([^&]+)/;\n      const match = videoUrl.match(regex);\n      const newVideoId = match ? match[1] : null;\n      setVideoId(newVideoId);\n    }\n  }, [state]);\n  React.useEffect(() => {\n    if (playerRef.current && onPlayerReadyRef) {\n      onPlayerReadyRef(playerRef.current);\n    }\n  }, [onPlayerReadyRef]);\n  const opts = {\n    height: '200',\n    width: '350',\n    playerVars: {\n      autoplay: 1\n    }\n  };\n  const onPlayerReady = event => {\n    playerRef.current = event.target;\n    if (onPlayerReadyRef) {\n      onPlayerReadyRef(playerRef.current);\n    }\n  };\n  const onPlayerStateChange = event => {\n    console.log('Player state change', event.data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"youtube--player--container\",\n    id: \"player\",\n    children: videoId && /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: videoId,\n      opts: opts,\n      onReady: onPlayerReady,\n      onStateChange: onPlayerStateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(Player, \"xHY0uR6fpdQyvfARFdSXOtzTdqU=\");\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","YouTube","jsxDEV","_jsxDEV","Player","state","onPlayerReadyRef","_s","videoId","setVideoId","useState","playerRef","useRef","useEffect","playedRecord","find","record","isPlayed","videoUrl","youtubeUrl","regex","match","newVideoId","current","opts","height","width","playerVars","autoplay","onPlayerReady","event","target","onPlayerStateChange","console","log","data","className","id","children","onReady","onStateChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/work/Jukebox/local_react_frontend/src/components/Player.js"],"sourcesContent":["import React from 'react';\r\nimport YouTube from 'react-youtube';\r\n\r\n\r\nfunction Player({ state, onPlayerReadyRef }) {\r\n    const [videoId, setVideoId] = React.useState('');\r\n    const playerRef = useRef(null);\r\n\r\n    React.useEffect(() => {\r\n        const playedRecord = state.find(record => record.isPlayed);\r\n        if (playedRecord) {\r\n            const videoUrl = playedRecord.youtubeUrl;\r\n            const regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/watch\\?v=|youtu\\.be\\/)([^&]+)/;\r\n            const match = videoUrl.match(regex);\r\n            const newVideoId = match ? match[1] : null;\r\n            setVideoId(newVideoId);\r\n        }\r\n    }, [state]);\r\n\r\n    React.useEffect(() => {\r\n        if (playerRef.current && onPlayerReadyRef) {\r\n            onPlayerReadyRef(playerRef.current);\r\n        }\r\n    }, [onPlayerReadyRef]);\r\n\r\n    const opts = {\r\n        height: '200',\r\n        width: '350',\r\n        playerVars: {\r\n            autoplay: 1,\r\n        },\r\n    };\r\n\r\n    const onPlayerReady = (event) => {\r\n        playerRef.current = event.target;\r\n        if (onPlayerReadyRef) {\r\n            onPlayerReadyRef(playerRef.current);\r\n        }\r\n    };\r\n\r\n    const onPlayerStateChange = (event) => {\r\n        console.log('Player state change', event.data);\r\n    };\r\n\r\n    return (\r\n        <div className=\"youtube--player--container\" id=\"player\">\r\n            {videoId && (\r\n                <YouTube videoId={videoId} opts={opts} onReady={onPlayerReady} onStateChange={onPlayerStateChange} />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Player;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpC,SAASC,MAAMA,CAAC;EAAEC,KAAK;EAAEC;AAAiB,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMC,SAAS,GAAGC,MAAM,CAAC,IAAI,CAAC;EAE9BZ,KAAK,CAACa,SAAS,CAAC,MAAM;IAClB,MAAMC,YAAY,GAAGT,KAAK,CAACU,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,QAAQ,CAAC;IAC1D,IAAIH,YAAY,EAAE;MACd,MAAMI,QAAQ,GAAGJ,YAAY,CAACK,UAAU;MACxC,MAAMC,KAAK,GAAG,0EAA0E;MACxF,MAAMC,KAAK,GAAGH,QAAQ,CAACG,KAAK,CAACD,KAAK,CAAC;MACnC,MAAME,UAAU,GAAGD,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI;MAC1CZ,UAAU,CAACa,UAAU,CAAC;IAC1B;EACJ,CAAC,EAAE,CAACjB,KAAK,CAAC,CAAC;EAEXL,KAAK,CAACa,SAAS,CAAC,MAAM;IAClB,IAAIF,SAAS,CAACY,OAAO,IAAIjB,gBAAgB,EAAE;MACvCA,gBAAgB,CAACK,SAAS,CAACY,OAAO,CAAC;IACvC;EACJ,CAAC,EAAE,CAACjB,gBAAgB,CAAC,CAAC;EAEtB,MAAMkB,IAAI,GAAG;IACTC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,KAAK;IACZC,UAAU,EAAE;MACRC,QAAQ,EAAE;IACd;EACJ,CAAC;EAED,MAAMC,aAAa,GAAIC,KAAK,IAAK;IAC7BnB,SAAS,CAACY,OAAO,GAAGO,KAAK,CAACC,MAAM;IAChC,IAAIzB,gBAAgB,EAAE;MAClBA,gBAAgB,CAACK,SAAS,CAACY,OAAO,CAAC;IACvC;EACJ,CAAC;EAED,MAAMS,mBAAmB,GAAIF,KAAK,IAAK;IACnCG,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEJ,KAAK,CAACK,IAAI,CAAC;EAClD,CAAC;EAED,oBACIhC,OAAA;IAAKiC,SAAS,EAAC,4BAA4B;IAACC,EAAE,EAAC,QAAQ;IAAAC,QAAA,EAClD9B,OAAO,iBACJL,OAAA,CAACF,OAAO;MAACO,OAAO,EAAEA,OAAQ;MAACgB,IAAI,EAAEA,IAAK;MAACe,OAAO,EAAEV,aAAc;MAACW,aAAa,EAAER;IAAoB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACvG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACrC,EAAA,CA/CQH,MAAM;AAAAyC,EAAA,GAANzC,MAAM;AAiDf,eAAeA,MAAM;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}